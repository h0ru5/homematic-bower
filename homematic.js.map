{"version":3,"sources":["homematic.coffee"],"names":[],"mappings":"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","file":"homematic.js","sourceRoot":"/source/","sourcesContent":["rq = require 'request-promise'\r\nPromise = require 'bluebird'\r\nxml2js = require 'xml2js'\r\n\r\nPromise.promisifyAll require('xml2js');\r\n\r\nlists=['devicelist','functionslist','sysvarlist','statelist','programlist','favoritelist','roomlist'];\r\n\r\nurlOf = (host,script,vars,method='GET') ->\r\n\t\t\tres =\r\n\t\t\t\t'qs' : vars\r\n\t\t\t\t'url' : \"http://#{host}/config/xmlapi/#{script}.cgi\"\r\n\t\t\t\t'withCredentials' : false\r\n\t\t\t\t'scheme' : 'http' #a bug in browserify?\r\n\r\nparseXml = (xml) ->\r\n\txml2js.parseStringAsync xml\r\n\r\nmodule.exports.getStates = (addr,raw) ->\r\n\tres = rq(urlOf(addr,'statelist')).then parseXml\r\n\tif raw then return res\r\n\telse res.then parseStates\r\n\r\nmodule.exports.parseStates = parseStates = (result) ->\r\n\tres = []\r\n\tresult.stateList.device.forEach (dev,devidx) ->\r\n\t\tres[devidx] = { \"id\" : dev.$.ise_id, \"name\" : dev.$.name, channels : [] }\r\n\t\tdev.channel?.forEach (channel,chidx) ->\r\n\t\t\tres[devidx].channels[chidx] = { \"id\" : channel.$.ise_id, \"name\" : channel.$.name , datapoints : []}\r\n\t\t\tchannel.datapoint?.forEach (dp,dpidx) ->\r\n\t\t\t\tres[devidx].channels[chidx].datapoints[dpidx] = dp.$;\r\n\treturn res\r\n\r\nmodule.exports.parseProgs = parseProgs = (addr) ->\r\n\t(result) ->\r\n\t\tres = []\r\n\t\tresult.programList.program.forEach (prog) ->\r\n\t\t\tres.push {\r\n\t\t\t\t\"addr\" : addr\r\n\t\t\t\t\"id\" : prog.$.id\r\n\t\t\t\t\"name\" : prog.$.name\r\n\t\t\t\t\"run\" : ->\r\n\t\t\t\t\treturn module.exports.runProgram @addr,@id\r\n\t\t\t}\r\n\t\treturn res\r\n\r\nmodule.exports.getPrograms = (addr,raw) ->\r\n\tres = rq(urlOf(addr,'programlist')).then parseXml\r\n\tif raw then return res\r\n\telse res.then parseProgs(addr)\r\n\r\nmodule.exports.runProgram = (addr,id) ->\r\n\trq urlOf(addr,'runprogram', {'program_id' : id })\r\n\t\t.promise()\r\n\r\nmodule.exports.setState = (addr, ise, value) ->\r\n\trq urlOf(addr,'statechange', {\r\n\t\t'ise_id' : ise\r\n\t\t'new_value': value\r\n\t\t\t\t\t\t\t\t })\r\n\t\t.promise()\r\n\r\nmodule.exports.getState = (addr,id) ->\r\n\trq urlOf(addr,'state', {\r\n\t\t'datapoint_id' : id\r\n\t\t})\r\n\t.then parseXml\r\n\t.then (res) ->\r\n\t\tif not res.state.datapoint? || res.state.datapoint.length == 0\r\n\t\t\tthrow 'empty resp'\r\n\t\tres.state.datapoint[0].$.value\r\n\r\n\r\nmodule.exports.getDataPoints = (addr) ->\r\n\tres = []\r\n\tidx=0\r\n\r\n\trq(urlOf(addr,'statelist'))\r\n\t\t.then parseXml\r\n\t\t.then (stateTree) ->\r\n\t\t\tstateTree.stateList?.device?.forEach (dev) ->\r\n\t\t\t\tdev.channel?.forEach (channel) ->\r\n\t\t\t\t\tchannel.datapoint?.forEach (dp) ->\r\n\t\t\t\t\t\tres.push\r\n\t\t\t\t\t\t\t'ccu' : addr\r\n\t\t\t\t\t\t\t'device' : dev.$.name\r\n\t\t\t\t\t\t\t'channel' : channel.$.name\r\n\t\t\t\t\t\t\t'id' : dp.$.ise_id\r\n\t\t\t\t\t\t\t'type' : dp.$.type\r\n\t\t\t\t\t\t\t'timestamp' : dp.$.timestamp\r\n\t\t\t\t\t\t\t'value' : dp.$.value #todo: type according to valuetype\r\n\t\t\t\t\t\t\t'set' : (newValue) ->\r\n\t\t\t\t\t\t\t\tmodule.exports.setState @ccu,@id,newValue\r\n\t\t\t\t\t\t\t'update' : () ->\r\n\t\t\t\t\t\t\t\tvalue = module.exports.getState @ccu,@id\r\n\t\t\treturn res\r\n"]}